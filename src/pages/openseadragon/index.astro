---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';
import { OpenSeadragonExample } from '../../components/OpenSeadragonExample';
---
<StarlightPage 
  frontmatter={{ title: 'OpenSeadragon Integration' }}
  headings={[{
    depth: 2,
    slug:'example',
    text: 'Interactive Example'
  }, {
    depth: 2,
    slug:'supported-formats',
    text: 'Supported Image Formats'  
  }, {
    depth: 2,
    slug:'api-reference',
    text: 'API Reference'  
  }]}>

  <p>
    Annotorious integrates seamlessly with <a href="https://openseadragon.github.io/" target="_blank">OpenSeadragon</a>, 
    allowing you to annotate high-resolution zoomable.
  </p>

  <h2 id="example">Interactive Example</h2>

  <p>
    Use the icons to toggle between image navigation (zoom and pan) and annotation. You can change
    drawing tools with the dropdown.
  </p>

  <p>
    <OpenSeadragonExample client:only="react" />
  </p>

  <h2 id="supported-formats">Supported Image Formats</h2>

  <p>
    OpenSeadragon supports the following image and tile source formats:
  </p>

  <ul>
    <li>Legacy Image Pyramids</li>
    <li>IIIF (International Image Interoperability Framework)</li>
    <li>DZI (Deep Zoom Images)</li>
    <li>OSM (Open Street Maps)</li>
    <li>TMS (Tiled Map Service)</li>
    <li>Zoomify</li>
    <li>Custom Tile Sources</li>
    <li>Simple Images</li>
  </ul>

  <h2 id="api-reference">API Reference</h2>

  <p>
    The JavaScript API for the Annotorious OpenSeadragon package is largely identical
    to that of the standard package, with a few OpenSeadragon-specific additions.
    Here are some key differences:
  </p>

  <ul>
    <li>Use `createOSDAnnotator` instead of `createImageAnnotator`.</li>
    <li>The first argument to `createOSDAnnotator` is the OpenSeadragon viewer instance, not an image element.</li>
  </ul>

  <p>
    For full API documentation, including OpenSeadragon-specific methods and options, see the <a href="/api-reference">API Reference</a>.
  </p>
</StarlightPage>

<style>
  table {
    padding-top: 2rem;
  }

  td > span {
    align-items: center;
    display: flex;
    gap: 0.75rem;
  }

  td > div,
  th > div {
    display: flex;
    justify-content: center;
  }
</style>


